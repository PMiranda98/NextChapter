version: '3.4'
name: carsapp
services:
  advertisement:
    container_name: advertisementService
    image: ${DOCKER_REGISTRY-}advertisement
    build:
      context: .
      dockerfile: src/Services/AdvertisementService/API/Dockerfile
    environment:
      - ServiceName=advertisement
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=7001
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres-advertisement:5432;User Id=postgres;Password=postgrespw;Database=advertisement
      - IdentityServiceUrl=http://identity:8080 
    ports:
      - "7001:7001"
    depends_on:
      - postgres-advertisement
      - rabbitmq
      - identity 

  search:
    container_name: searchService
    image: ${DOCKER_REGISTRY-}search
    build:
      context: .
      dockerfile: src/Services/SearchService/API/Dockerfile
    environment:
      - ServiceName=search
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=7002
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://mongo:mongopw@mongodb 
    ports:
      - "7002:7002"
    depends_on:
      - mongodb
      - rabbitmq

  postgres-advertisement:
    container_name: advertisementServiceDb
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata-advertisement:/var/lib/postgresql

  pgadmin:
    container_name: postgresDbsUI
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: postgrespw
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres-advertisement
      - postgres-identity

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb

  mongoexpress:
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017
      - ME_CONFIG_MONGODB_AUTH_USERNAME=mongo
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=mongopw
      - ME_CONFIG_BASICAUTH_USERNAME=mongoexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mongoexpresspw
    ports:
      - 8081:8081
    volumes:
      - mongoexpress:/var/lib/mongoexpress
    depends_on:
      - mongodb

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672

  identity:
    image: ${DOCKER_REGISTRY-}identity
    build:
      context: .
      dockerfile: src/Services/IdentityService/Identity/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Server=postgres-identity:5432;User Id=postgres;Password=postgrespw;Database=identity
    ports:
      - "5000:8080"
    depends_on:
      - postgres-identity

  postgres-identity:
    container_name: identityServiceDb
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5001:5432
    volumes:
      - pg-identitydata:/var/lib/postgresql-identity

  gatewayservice:
    image: ${DOCKER_REGISTRY-}gatewayservice
    build:
      context: .
      dockerfile: src/Services/GatewayService/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "6001:8080"

volumes:
  pgdata-advertisement:
  pgadmin-data:
  mongodata:
  mongoexpress:
  pg-identitydata:

